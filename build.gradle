
buildscript { // docs
	ext {
		restdocsApiSpecVersion = '0.19.2'
	}
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
}

group = 'com.sdm'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	// API 문서 생성
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // 2
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
}

openapi3 {
	servers = [
			{ url = 'http://localhost:8080' },
			{ url = 'http://production-api-server-url.com' }
	]
	title = '샘플 서버로 알아보는 Service API'
	description = '샘플서버의 설명을 적는구간 Service API description'
	version = '1.0.0'
	format = 'json'
}

tasks.named('test') {
	useJUnitPlatform()
}
